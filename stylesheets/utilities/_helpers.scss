// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------
@use '../abstracts/' as *;

.container {
  width: calc(100% - 2 * $margin-sm);
  margin-inline: auto;

  @include breakpoint(medium) {
    width: min(calc(100% - 2 * $margin-md), $max-width - 2 * $margin-md);
  }

  @include breakpoint(large) {
    width: min(calc(100% - 2 * $margin-lg), $max-width - 2 * $margin-lg);
  }
}

.container-nav {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1;

  margin-inline: auto;

  width: min(calc(100% - 2 * $margin-lg), $max-width - 2 * $margin-lg);

  @include breakpoint-down(large) {
    width: 100%;
    translate: 0 -100%;
    transition: 0.5s;
  }

  &--scroll-up {
    @include breakpoint-down(large) {
      translate: 0;
    }

    @include breakpoint(large) {
      & .nav {
        padding-block: rem(25);
      }
    }
  }
}

/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0; /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.show-on-desktop {
  @include breakpoint(large) {
    position: relative;
    height: auto;
    width: auto;
    overflow: visible;
  }
}

.show-on-mobile {
  display: block;

  @include breakpoint(large) {
    display: none;
  }
}

.img-wrapper {
  position: relative;
}

.flow {
  padding-top: rem(80);
  padding-bottom: rem(120);

  @include breakpoint(medium) {
    padding-top: rem(120);
    padding-bottom: rem(150);
  }
}

.flow-bottom {
  padding-bottom: $flow-bt-sm;

  @include breakpoint(medium) {
    padding-bottom: $flow-bt-lg;
  }
}
.flow-top {
  padding-top: $flow-top-sm;

  @include breakpoint(medium) {
    padding-top: $flow-top-lg;
  }
}
